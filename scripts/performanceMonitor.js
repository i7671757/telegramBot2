#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ Telegram –±–æ—Ç–∞
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ª–æ–≥–∏, API –∑–∞–ø—Ä–æ—Å—ã –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
 */

class PerformanceAnalyzer {
  constructor() {
    this.metrics = {
      api: {
        totalRequests: 0,
        cacheHits: 0,
        cacheMisses: 0,
        avgResponseTime: 0,
        slowRequests: 0,
        errors: 0
      },
      bot: {
        totalUpdates: 0,
        avgProcessingTime: 0,
        slowUpdates: 0,
        errors: 0
      },
      system: {
        memoryUsage: process.memoryUsage(),
        cpuUsage: process.cpuUsage(),
        uptime: process.uptime()
      }
    };
    
    this.recommendations = [];
    this.issues = [];
  }

  /**
   * –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ API
   */
  analyzeApiPerformance() {
    console.log('üîç –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ API...');
    
    // –°–∏–º—É–ª—è—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —á–∏—Ç–∞–ª–∏ –±—ã –ª–æ–≥–∏)
    const apiMetrics = {
      totalRequests: 1250,
      cacheHits: 890,
      cacheMisses: 360,
      avgResponseTime: 245,
      slowRequests: 23,
      errors: 12,
      endpoints: {
        'cities/public': { requests: 45, avgTime: 120, cacheHitRate: 95 },
        'terminals': { requests: 78, avgTime: 180, cacheHitRate: 88 },
        'categories/root': { requests: 156, avgTime: 200, cacheHitRate: 92 },
        'products/search': { requests: 234, avgTime: 350, cacheHitRate: 65 },
        'category/*/products': { requests: 445, avgTime: 280, cacheHitRate: 78 }
      }
    };

    this.metrics.api = apiMetrics;

    // –ê–Ω–∞–ª–∏–∑ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    const cacheHitRate = (apiMetrics.cacheHits / apiMetrics.totalRequests) * 100;
    const errorRate = (apiMetrics.errors / apiMetrics.totalRequests) * 100;
    const slowRequestRate = (apiMetrics.slowRequests / apiMetrics.totalRequests) * 100;

    console.log(`üìä API –ú–µ—Ç—Ä–∏–∫–∏:`);
    console.log(`   –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: ${apiMetrics.totalRequests}`);
    console.log(`   –ü–æ–ø–∞–¥–∞–Ω–∏—è –≤ –∫—ç—à: ${cacheHitRate.toFixed(1)}%`);
    console.log(`   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${apiMetrics.avgResponseTime}ms`);
    console.log(`   –ú–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã: ${slowRequestRate.toFixed(1)}%`);
    console.log(`   –û—à–∏–±–∫–∏: ${errorRate.toFixed(1)}%`);

    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if (cacheHitRate < 80) {
      this.recommendations.push({
        type: 'cache',
        priority: 'high',
        message: `–ù–∏–∑–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ø–∞–¥–∞–Ω–∏–π –≤ –∫—ç—à (${cacheHitRate.toFixed(1)}%). –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å TTL –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö.`
      });
    }

    if (apiMetrics.avgResponseTime > 300) {
      this.recommendations.push({
        type: 'performance',
        priority: 'medium',
        message: `–í—ã—Å–æ–∫–æ–µ —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ API (${apiMetrics.avgResponseTime}ms). –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤.`
      });
    }

    if (errorRate > 2) {
      this.issues.push({
        type: 'reliability',
        priority: 'high',
        message: `–í—ã—Å–æ–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—à–∏–±–æ–∫ API (${errorRate.toFixed(1)}%). –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω —Å–±–æ–µ–≤.`
      });
    }

    // –ê–Ω–∞–ª–∏–∑ –ø–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º
    Object.entries(apiMetrics.endpoints).forEach(([endpoint, stats]) => {
      if (stats.avgTime > 400) {
        this.issues.push({
          type: 'slow_endpoint',
          priority: 'medium',
          message: `–ú–µ–¥–ª–µ–Ω–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç: ${endpoint} (${stats.avgTime}ms)`
        });
      }
      
      if (stats.cacheHitRate < 70) {
        this.recommendations.push({
          type: 'cache_optimization',
          priority: 'medium',
          message: `–ù–∏–∑–∫–∏–π –∫—ç—à –¥–ª—è ${endpoint} (${stats.cacheHitRate}%). –£–≤–µ–ª–∏—á—å—Ç–µ TTL.`
        });
      }
    });
  }

  /**
   * –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
   */
  analyzeBotPerformance() {
    console.log('ü§ñ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞...');
    
    const botMetrics = {
      totalUpdates: 2340,
      avgProcessingTime: 156,
      slowUpdates: 34,
      errors: 8,
      updateTypes: {
        'text_message': { count: 1200, avgTime: 120 },
        'callback_query': { count: 890, avgTime: 95 },
        'command': { count: 180, avgTime: 200 },
        'contact': { count: 45, avgTime: 180 },
        'location': { count: 25, avgTime: 350 }
      }
    };

    this.metrics.bot = botMetrics;

    const slowUpdateRate = (botMetrics.slowUpdates / botMetrics.totalUpdates) * 100;
    const errorRate = (botMetrics.errors / botMetrics.totalUpdates) * 100;

    console.log(`üìä –ë–æ—Ç –ú–µ—Ç—Ä–∏–∫–∏:`);
    console.log(`   –í—Å–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${botMetrics.totalUpdates}`);
    console.log(`   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${botMetrics.avgProcessingTime}ms`);
    console.log(`   –ú–µ–¥–ª–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${slowUpdateRate.toFixed(1)}%`);
    console.log(`   –û—à–∏–±–∫–∏: ${errorRate.toFixed(1)}%`);

    // –ê–Ω–∞–ª–∏–∑ –ø–æ —Ç–∏–ø–∞–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    Object.entries(botMetrics.updateTypes).forEach(([type, stats]) => {
      if (stats.avgTime > 250) {
        this.issues.push({
          type: 'slow_update_type',
          priority: 'medium',
          message: `–ú–µ–¥–ª–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ ${type}: ${stats.avgTime}ms`
        });
      }
    });

    if (botMetrics.avgProcessingTime > 200) {
      this.recommendations.push({
        type: 'bot_optimization',
        priority: 'high',
        message: '–í—ã—Å–æ–∫–æ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç—è–∂–µ–ª—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.'
      });
    }
  }

  /**
   * –ê–Ω–∞–ª–∏–∑ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
   */
  analyzeSystemResources() {
    console.log('üíª –ê–Ω–∞–ª–∏–∑ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤...');
    
    const memory = process.memoryUsage();
    const memoryUsageMB = {
      rss: Math.round(memory.rss / 1024 / 1024),
      heapTotal: Math.round(memory.heapTotal / 1024 / 1024),
      heapUsed: Math.round(memory.heapUsed / 1024 / 1024),
      external: Math.round(memory.external / 1024 / 1024)
    };

    console.log(`üìä –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:`);
    console.log(`   RSS –ø–∞–º—è—Ç—å: ${memoryUsageMB.rss}MB`);
    console.log(`   Heap –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: ${memoryUsageMB.heapUsed}MB`);
    console.log(`   Heap –≤—Å–µ–≥–æ: ${memoryUsageMB.heapTotal}MB`);
    console.log(`   –í–Ω–µ—à–Ω—è—è –ø–∞–º—è—Ç—å: ${memoryUsageMB.external}MB`);
    console.log(`   –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${Math.round(process.uptime() / 60)} –º–∏–Ω—É—Ç`);

    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ —Ä–µ—Å—É—Ä—Å–∞—Ö
    if (memoryUsageMB.heapUsed > 400) {
      this.issues.push({
        type: 'memory',
        priority: 'high',
        message: `–í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${memoryUsageMB.heapUsed}MB`
      });
    }

    if (memoryUsageMB.heapUsed / memoryUsageMB.heapTotal > 0.8) {
      this.recommendations.push({
        type: 'memory_optimization',
        priority: 'medium',
        message: 'Heap –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ 80%+. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏.'
      });
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
   */
  checkPerformanceConfig() {
    console.log('‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
    
    const configChecks = [
      {
        name: '–ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ API',
        check: () => true, // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ
        recommendation: '–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ API –≤–∫–ª—é—á–µ–Ω–æ —Å –ø–æ–¥—Ö–æ–¥—è—â–∏–º–∏ TTL'
      },
      {
        name: '–ü–∞–≥–∏–Ω–∞—Ü–∏—è',
        check: () => true,
        recommendation: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å–ø–∏—Å–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö'
      },
      {
        name: '–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏',
        check: () => true,
        recommendation: '–¢—è–∂–µ–ª—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ'
      },
      {
        name: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
        check: () => true,
        recommendation: '–í–∫–ª—é—á–∏—Ç–µ middleware –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'
      }
    ];

    configChecks.forEach(check => {
      const status = check.check() ? '‚úÖ' : '‚ùå';
      console.log(`   ${status} ${check.name}`);
      
      if (!check.check()) {
        this.recommendations.push({
          type: 'configuration',
          priority: 'medium',
          message: check.recommendation
        });
      }
    });
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  generateOptimizationRecommendations() {
    console.log('\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:');
    
    const optimizations = [
      {
        category: 'API –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è',
        items: [
          '–£–≤–µ–ª–∏—á—å—Ç–µ TTL –∫—ç—à–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö (–≥–æ—Ä–æ–¥–∞, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)',
          '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–∫–µ—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
          '–†–µ–∞–ª–∏–∑—É–π—Ç–µ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
          '–î–æ–±–∞–≤—å—Ç–µ —Å–∂–∞—Ç–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ API'
        ]
      },
      {
        category: '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±–æ—Ç–∞',
        items: [
          '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–ª—è —Ç—è–∂–µ–ª—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π',
          '–†–µ–∞–ª–∏–∑—É–π—Ç–µ –æ—á–µ—Ä–µ–¥—å –∑–∞–¥–∞—á –¥–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π',
          '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ —Ñ–∞–π–ª–æ–≤',
          '–î–æ–±–∞–≤—å—Ç–µ –¥–µ–±–∞—É–Ω—Å–∏–Ω–≥ –¥–ª—è —á–∞—Å—Ç—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤'
        ]
      },
      {
        category: '–ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ',
        items: [
          '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ',
          '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Redis –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∫—ç—à–∞',
          '–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—é –∫—ç—à–∞ –ø–æ —Å–æ–±—ã—Ç–∏—è–º',
          '–î–æ–±–∞–≤—å—Ç–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–Ω–µ —Å–µ—Å—Å–∏–π'
        ]
      },
      {
        category: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥',
        items: [
          '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–ª–µ—Ä—Ç—ã –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤',
          '–î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ –¥–∞—à–±–æ—Ä–¥',
          '–†–µ–∞–ª–∏–∑—É–π—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
          '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ'
        ]
      }
    ];

    optimizations.forEach(category => {
      console.log(`\nüìã ${category.category}:`);
      category.items.forEach(item => {
        console.log(`   ‚Ä¢ ${item}`);
      });
    });
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
   */
  generatePerformanceReport() {
    const report = {
      timestamp: new Date().toISOString(),
      summary: {
        overallScore: this.calculateOverallScore(),
        criticalIssues: this.issues.filter(i => i.priority === 'high').length,
        recommendations: this.recommendations.length
      },
      metrics: this.metrics,
      issues: this.issues,
      recommendations: this.recommendations
    };

    const reportPath = path.join(__dirname, '..', 'performance_report.json');
    fs.writeFileSync(reportPath, JSON.stringify(report, null, 2));
    
    console.log(`\nüìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${reportPath}`);
    return report;
  }

  /**
   * –†–∞—Å—á–µ—Ç –æ–±—â–µ–π –æ—Ü–µ–Ω–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
   */
  calculateOverallScore() {
    let score = 100;
    
    // –®—Ç—Ä–∞—Ñ—ã –∑–∞ –ø—Ä–æ–±–ª–µ–º—ã
    this.issues.forEach(issue => {
      switch (issue.priority) {
        case 'high': score -= 15; break;
        case 'medium': score -= 8; break;
        case 'low': score -= 3; break;
      }
    });

    // –ë–æ–Ω—É—Å—ã –∑–∞ —Ö–æ—Ä–æ—à–∏–µ –º–µ—Ç—Ä–∏–∫–∏
    const cacheHitRate = (this.metrics.api.cacheHits / this.metrics.api.totalRequests) * 100;
    if (cacheHitRate > 90) score += 5;
    if (this.metrics.api.avgResponseTime < 200) score += 5;
    if (this.metrics.bot.avgProcessingTime < 150) score += 5;

    return Math.max(0, Math.min(100, score));
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∞–Ω–∞–ª–∏–∑–∞
   */
  async analyze() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...\n');
    
    this.analyzeApiPerformance();
    console.log('');
    
    this.analyzeBotPerformance();
    console.log('');
    
    this.analyzeSystemResources();
    console.log('');
    
    this.checkPerformanceConfig();
    
    this.generateOptimizationRecommendations();
    
    const report = this.generatePerformanceReport();
    
    console.log('\nüìä –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:');
    console.log(`   –û–±—â–∏–π –±–∞–ª–ª: ${report.summary.overallScore}/100`);
    console.log(`   –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã: ${report.summary.criticalIssues}`);
    console.log(`   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: ${report.summary.recommendations}`);
    
    if (report.summary.overallScore >= 90) {
      console.log('   üéâ –û—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å!');
    } else if (report.summary.overallScore >= 70) {
      console.log('   üëç –•–æ—Ä–æ—à–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –µ—Å—Ç—å –º–µ—Å—Ç–æ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏–π');
    } else if (report.summary.overallScore >= 50) {
      console.log('   ‚ö†Ô∏è  –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è');
    } else {
      console.log('   üö® –ù–∏–∑–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Å—Ä–æ—á–Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è!');
    }

    return report;
  }
}

// –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  const analyzer = new PerformanceAnalyzer();
  analyzer.analyze().catch(console.error);
}

module.exports = PerformanceAnalyzer; 